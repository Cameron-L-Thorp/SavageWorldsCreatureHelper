// <auto-generated />
using CreaturesSavageWorlds;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CreaturesSavageWorlds.Migrations
{
    [DbContext(typeof(CreatureContext))]
    [Migration("20220820125032_CreatureBase")]
    partial class CreatureBase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CreaturesSavageWorlds.CreatureAttribute", b =>
                {
                    b.Property<string>("CreatureName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Agility")
                        .HasColumnType("int");

                    b.Property<int>("Smarts")
                        .HasColumnType("int");

                    b.Property<int>("Spirit")
                        .HasColumnType("int");

                    b.Property<int>("Strength")
                        .HasColumnType("int");

                    b.Property<int>("Vigor")
                        .HasColumnType("int");

                    b.HasKey("CreatureName");

                    b.ToTable("CreatureAttributes");
                });

            modelBuilder.Entity("CreaturesSavageWorlds.CreatureDerivedStat", b =>
                {
                    b.Property<string>("CreatureName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Pace")
                        .HasColumnType("int");

                    b.Property<int>("Parry")
                        .HasColumnType("int");

                    b.Property<int>("Toughness")
                        .HasColumnType("int");

                    b.HasKey("CreatureName");

                    b.ToTable("CreatureDerivedStats");
                });

            modelBuilder.Entity("CreaturesSavageWorlds.CreatureDescription", b =>
                {
                    b.Property<string>("CreatureName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.HasKey("CreatureName");

                    b.ToTable("CreatureDescriptions");
                });

            modelBuilder.Entity("CreaturesSavageWorlds.CreatureSkill", b =>
                {
                    b.Property<string>("CreatureName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Academics")
                        .HasColumnType("int");

                    b.Property<int>("Athletics")
                        .HasColumnType("int");

                    b.Property<int>("Battle")
                        .HasColumnType("int");

                    b.Property<int>("Boating")
                        .HasColumnType("int");

                    b.Property<int>("CommonKnowledge")
                        .HasColumnType("int");

                    b.Property<int>("Driving")
                        .HasColumnType("int");

                    b.Property<int>("Electronics")
                        .HasColumnType("int");

                    b.Property<int>("Faith")
                        .HasColumnType("int");

                    b.Property<int>("Fighting")
                        .HasColumnType("int");

                    b.Property<int>("Focus")
                        .HasColumnType("int");

                    b.Property<int>("Gambling")
                        .HasColumnType("int");

                    b.Property<int>("Hacking")
                        .HasColumnType("int");

                    b.Property<int>("Healing")
                        .HasColumnType("int");

                    b.Property<int>("Intimidation")
                        .HasColumnType("int");

                    b.Property<int>("Language")
                        .HasColumnType("int");

                    b.Property<int>("Notice")
                        .HasColumnType("int");

                    b.Property<int>("Occult")
                        .HasColumnType("int");

                    b.Property<int>("Performance")
                        .HasColumnType("int");

                    b.Property<int>("Persuasion")
                        .HasColumnType("int");

                    b.Property<int>("Piloting")
                        .HasColumnType("int");

                    b.Property<int>("Psionics")
                        .HasColumnType("int");

                    b.Property<int>("Repair")
                        .HasColumnType("int");

                    b.Property<int>("Research")
                        .HasColumnType("int");

                    b.Property<int>("Riding")
                        .HasColumnType("int");

                    b.Property<int>("Science")
                        .HasColumnType("int");

                    b.Property<int>("Shooting")
                        .HasColumnType("int");

                    b.Property<int>("Spellcasting")
                        .HasColumnType("int");

                    b.Property<int>("Stealth")
                        .HasColumnType("int");

                    b.Property<int>("Survival")
                        .HasColumnType("int");

                    b.Property<int>("Taunt")
                        .HasColumnType("int");

                    b.Property<int>("Thievery")
                        .HasColumnType("int");

                    b.Property<int>("WeirdScience")
                        .HasColumnType("int");

                    b.HasKey("CreatureName");

                    b.ToTable("CreatureSkills");
                });
#pragma warning restore 612, 618
        }
    }
}
